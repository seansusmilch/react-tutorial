{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","components/Header.tsx","components/InputTodo.tsx","components/TodoContainer.tsx","index.tsx"],"names":["TodoItem","props","todo","completed","title","id","useEffect","alert","className","type","checked","onChange","handleChangeProps","style","fontStyle","color","opacity","textDecoration","onClick","deleteTodo","TodoList","todos","map","key","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodo","name","placeholder","value","target","TodoContainer","Array","setTodos","show","setShow","axios","get","then","res","data","newTodo","userId","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.d76d9f71.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\r\n\r\ninterface Props{\r\n    todo:{\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    },\r\n    handleChangeProps: (id:string)=>void\r\n    deleteTodo: (id: string)=>void\r\n}\r\n\r\nexport const TodoItem = (props:Props)=>{\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"grey\",\r\n        opacity: 1,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const {completed,title,id} = props.todo\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            alert('Item about to be deleted!')\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <li className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                    <input type=\"checkbox\"  checked={completed} onChange={()=> props.handleChangeProps(id)}/>\r\n                </div>\r\n            </div>\r\n            <span className=\"input-group-text bg-transparent border-0\" style={completed ? completedStyle : {}} >{title}</span>\r\n            <button onClick={()=> props.deleteTodo(id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n        </li>  \r\n    )\r\n\r\n}\r\n\r\n// export default function TodoItem(props:Props){\r\n//     return(\r\n//         <li className=\"input-group\">\r\n//             <div className=\"input-group-prepend\">\r\n//                 <div className=\"input-group-text\">\r\n//                     <input type=\"checkbox\"  checked={props.todo.completed} onChange={()=> props.handleChangeProps(props.todo.id)}/>\r\n//                 </div>\r\n//             </div>\r\n//             <span className=\"input-group-text bg-transparent border-0\" style={props.todo.completed ? completedStyle : {}} >{props.todo.title}</span>\r\n//             <button onClick={()=> props.deleteTodo(props.todo.id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n//         </li>    \r\n//     )\r\n// }","import React from \"react\"\r\n\r\nimport {TodoItem} from \"./TodoItem\"\r\n\r\ninterface Props {\r\n    todos: {\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    }[],\r\n    handleChangeProps: (id:string)=>void,\r\n    deleteTodo: (id:string)=>void\r\n}\r\n\r\nexport default function TodoList(props: Props){\r\n    return (\r\n        <div>\r\n                {props.todos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.id} \r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodo={props.deleteTodo}\r\n\r\n                />\r\n                ))}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useRef} from \"react\"\r\n\r\n// export const Header : React.FC = () => {\r\n//     return (\r\n//         <header className=\"jumbotron\">\r\n//             <h1>Simple React Todo App\r\n//                 <span id=\"inH1\"></span>\r\n//             </h1>\r\n//             <p>Please add to-do item(s) through the input field</p>\r\n//         </header>\r\n//     )\r\n// }\r\n\r\ninterface Props {\r\n    headerSpan: boolean\r\n}\r\n\r\nexport const Header = (props:Props)=>{\r\n\r\n    const isInitialMount = useRef(true)\r\n    console.log(isInitialMount);\r\n    \r\n\r\n    useEffect(()=>{\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n        if(isInitialMount.current){\r\n            isInitialMount.current = false\r\n        }else{\r\n            document!.getElementById(\"inH1\")!.innerHTML = \"clicked\"\r\n            document!.getElementById(\"inH1\")!.style.backgroundColor = bgColor;\r\n        }\r\n    },[props.headerSpan])\r\n\r\n    return (\r\n        <header className=\"jumbotron\">\r\n            <h1>Simple React Todo App <span id=\"inH1\"></span></h1>\r\n            <p>Please add to-do item(s) through the input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\n// export default class Header extends React.Component<Props>{\r\n//     componentDidUpdate(prevProps:any, prevState:any){\r\n//         var x = Math.floor(Math.random() * 256);\r\n//         var y = Math.floor(Math.random() * 256);\r\n//         var z = Math.floor(Math.random() * 256);\r\n//         var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n//         if (prevProps.headerSpan !== this.props.headerSpan) {\r\n//             document!.getElementById(\"inH1\")!.innerHTML = \"clicked\"\r\n//             document!.getElementById(\"inH1\")!.style.backgroundColor = bgColor;\r\n//         }\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <header className=\"jumbotron\">\r\n//                 <h1>Simple React Todo App <span id=\"inH1\"></span></h1>\r\n//                 <p>Please add to-do item(s) through the input field</p>\r\n//             </header>\r\n//         )\r\n//     }\r\n// }","import React, {useState} from \"react\"\r\n\r\ninterface Props{\r\n    addTodo: (title:string)=>void\r\n}\r\n\r\n// export default class InputTodo extends Component<Props>{\r\n//     state={\r\n//         title:\"\"\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <div className=\"input-group\">\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         name=\"title\" \r\n//                         className=\"form-control\"\r\n//                         placeholder=\"Add Todo...\" \r\n//                         value={this.state.title} \r\n//                         onChange={this.onChange} \r\n//                     />\r\n\r\n//                     <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n//                 </div>\r\n//             </form>\r\n//         )\r\n//     }\r\n\r\n//     onChange = (e:any) => {\r\n//         this.setState({\r\n//             [e.target.name]: e.target.value\r\n//         })\r\n//         console.log('ello')\r\n//     }\r\n\r\n//     handleSubmit = (e:any) => {\r\n//         e.preventDefault()\r\n//         this.props.addTodo(this.state.title)\r\n//         this.setState({\r\n//             title:\"\"\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const InputTodo = (props:Props) => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\"\r\n    })\r\n\r\n    const onChange = (e:any) =>{\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e:any)=>{\r\n        e.preventDefault()\r\n        props.addTodo(inputText.title)\r\n        setInputText({\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Add Todo...\" \r\n                    value={inputText.title} \r\n                    onChange={onChange} \r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport TodoList from \"./TodoList\"\r\nimport {Header} from \"./Header\"\r\nimport {InputTodo} from \"./InputTodo\"\r\nimport axios from \"axios\"\r\n\r\ninterface Todo {\r\n    userId: number,\r\n    id: string,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\nexport const TodoContainer = () => {\r\n    const [todos, setTodos] = useState(Array<Todo>())\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleChange = (id:string) => {\r\n        setTodos(\r\n        todos.map((todo:Todo) => {\r\n            if(todo.id === id){\r\n            todo.completed = !todo.completed\r\n            }\r\n            return todo\r\n        })\r\n        )\r\n        setShow(!show)\r\n    }\r\n\r\n    const delTodo = (id:string) => {\r\n        setTodos([\r\n            ...todos.filter((todo:Todo) =>{\r\n                return todo.id !== id\r\n            })\r\n        ])\r\n    }\r\n\r\n    const addTodo = (title:string) =>{\r\n        const newTodo = {\r\n            userId: 98,\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    //React Hooks\r\n\r\n    useEffect(() =>{\r\n        console.log('test run')\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n            .then(res => setTodos(res.data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header headerSpan={show} />\r\n            <InputTodo addTodo={addTodo} />\r\n            <TodoList\r\n                todos={todos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodo={delTodo}\r\n            />\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\n// export default class TodoContainer extends React.Component{\r\n\r\n//     state = {\r\n// \t\ttodos: Array<Todo>(),\r\n// \t\tshow: false\r\n//     };\r\n\r\n//     componentDidMount(){\r\n//       axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({todos: res.data}))\r\n//     }\r\n\r\n//     render(){\r\n//         return (<div className=\"container\" style={{ \r\n//           // maxWidth: \"600px\"\r\n//         }}>\r\n//             <Header headerSpan={this.state.show}/>\r\n//             <InputTodo addTodo={this.addTodo} />\r\n//             <TodoList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodo={this.delTodo}/>\r\n//           </div>)\r\n//     }\r\n\r\n//     handleChange = (id:string) => {\r\n//         this.setState({\r\n//             todos: this.state.todos.map(todo => {\r\n//               if (todo.id === id) {\r\n//                 todo.completed = !todo.completed;\r\n//               }\r\n//               return todo;\r\n// \t\t\t}),\r\n// \t\t\tshow: !this.state.show\r\n//         });\r\n//         console.log('clicked ', id)\r\n//     }\r\n\r\n//     delTodo = (id:string) => {\r\n// \t\taxios\r\n// \t\t\t.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n// \t\t\t.then(res =>\r\n// \t\t\t\tthis.setState({\r\n// \t\t\t\t\ttodos: [\r\n// \t\t\t\t\t\t...this.state.todos.filter(todo =>{\r\n// \t\t\t\t\t\t\treturn todo.id !== id\r\n// \t\t\t\t\t\t})\r\n// \t\t\t\t\t]\r\n// \t\t\t\t})\r\n// \t\t\t)\r\n\r\n//         // this.setState({\r\n//         //     todos: [\r\n//         //       ...this.state.todos.filter(todo => {\r\n//         //         return todo.id !== id;\r\n//         //       })\r\n//         //     ]\r\n//         //   });\r\n\r\n//         console.log('deleted ', id);\r\n//     }\r\n\r\n//     addTodo = (title:string)=>{\r\n//         axios\r\n//         \t.post('https://jsonplaceholder.typicode.com/todos',{\r\n// \t\t\t\ttitle: title,\r\n// \t\t\t\tcompleted: false\r\n// \t\t\t})\r\n// \t\t\t.then(res => \r\n// \t\t\t\tthis.setState({\r\n// \t\t\t\t\ttodos: [...this.state.todos, res.data]\r\n// \t\t\t\t})\r\n// \t\t\t)\r\n\r\n//         // const newTodo = {\r\n//         //     id: uuidv4(),\r\n//         //     title: title,\r\n//         //     completed: false\r\n//         // };\r\n//         // this.setState({\r\n//         //     todos: [...this.state.todos, newTodo]\r\n//         // });\r\n\r\n//         console.log('added: ', title)\r\n//     }\r\n// }","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport {TodoContainer} from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer/>, document.getElementById(\"root\") )"],"sourceRoot":""}