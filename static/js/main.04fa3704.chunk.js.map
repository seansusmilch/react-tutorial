{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","components/Header.tsx","components/InputTodo.tsx","components/TodoContainer.tsx","nav/NavLink.tsx","nav/NavContainer.tsx","App.tsx","index.tsx"],"names":["TodoItem","props","todo","completed","title","id","className","type","checked","onChange","handleChangeProps","style","fontStyle","color","opacity","textDecoration","onClick","deleteTodo","TodoList","todos","map","key","Header","isInitialMount","useRef","console","log","useEffect","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodo","name","placeholder","value","target","TodoContainer","Array","setTodos","show","setShow","axios","get","then","res","data","newTodo","userId","uuidv4","filter","NavLink","page","isActive","goTo","outline","NavContainer","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","pages","active","App","setActive","includes","ReactDOM","render"],"mappings":"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","file":"static/js/main.04fa3704.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\r\n\r\ninterface Props{\r\n    todo:{\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    },\r\n    handleChangeProps: (id:string)=>void\r\n    deleteTodo: (id: string)=>void\r\n}\r\n\r\nexport const TodoItem = (props:Props)=>{\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"grey\",\r\n        opacity: 1,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const {completed,title,id} = props.todo\r\n\r\n    // useEffect(()=>{\r\n    //     return ()=>{\r\n    //         alert('Item about to be deleted!')\r\n    //     }\r\n    // },[])\r\n\r\n    return(\r\n        <li className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                    <input type=\"checkbox\"  checked={completed} onChange={()=> props.handleChangeProps(id)}/>\r\n                </div>\r\n            </div>\r\n            <span className=\"input-group-text bg-transparent border-0\" style={completed ? completedStyle : {}} >{title}</span>\r\n            <button onClick={()=> props.deleteTodo(id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n        </li>  \r\n    )\r\n\r\n}\r\n\r\n// export default function TodoItem(props:Props){\r\n//     return(\r\n//         <li className=\"input-group\">\r\n//             <div className=\"input-group-prepend\">\r\n//                 <div className=\"input-group-text\">\r\n//                     <input type=\"checkbox\"  checked={props.todo.completed} onChange={()=> props.handleChangeProps(props.todo.id)}/>\r\n//                 </div>\r\n//             </div>\r\n//             <span className=\"input-group-text bg-transparent border-0\" style={props.todo.completed ? completedStyle : {}} >{props.todo.title}</span>\r\n//             <button onClick={()=> props.deleteTodo(props.todo.id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n//         </li>    \r\n//     )\r\n// }","import React from \"react\"\r\n\r\nimport {TodoItem} from \"./TodoItem\"\r\n\r\ninterface Props {\r\n    todos: {\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    }[],\r\n    handleChangeProps: (id:string)=>void,\r\n    deleteTodo: (id:string)=>void\r\n}\r\n\r\nexport default function TodoList(props: Props){\r\n    return (\r\n        <div>\r\n                {props.todos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.id} \r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodo={props.deleteTodo}\r\n\r\n                />\r\n                ))}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useRef} from \"react\"\r\n\r\n// export const Header : React.FC = () => {\r\n//     return (\r\n//         <header className=\"jumbotron\">\r\n//             <h1>Simple React Todo App\r\n//                 <span id=\"inH1\"></span>\r\n//             </h1>\r\n//             <p>Please add to-do item(s) through the input field</p>\r\n//         </header>\r\n//     )\r\n// }\r\n\r\ninterface Props {\r\n    headerSpan: boolean\r\n}\r\n\r\nexport const Header = (props:Props)=>{\r\n\r\n    const isInitialMount = useRef(true)\r\n    console.log(isInitialMount);\r\n    \r\n\r\n    useEffect(()=>{\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n        if(isInitialMount.current){\r\n            isInitialMount.current = false\r\n        }else{\r\n            document!.getElementById(\"inH1\")!.innerHTML = \"clicked\"\r\n            document!.getElementById(\"inH1\")!.style.backgroundColor = bgColor;\r\n        }\r\n    },[props.headerSpan])\r\n\r\n    return (\r\n        <header className=\"jumbotron\">\r\n            <h1>Simple React Todo App <span id=\"inH1\"></span></h1>\r\n            <p>Please add to-do item(s) through the input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\n// export default class Header extends React.Component<Props>{\r\n//     componentDidUpdate(prevProps:any, prevState:any){\r\n//         var x = Math.floor(Math.random() * 256);\r\n//         var y = Math.floor(Math.random() * 256);\r\n//         var z = Math.floor(Math.random() * 256);\r\n//         var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n//         if (prevProps.headerSpan !== this.props.headerSpan) {\r\n//             document!.getElementById(\"inH1\")!.innerHTML = \"clicked\"\r\n//             document!.getElementById(\"inH1\")!.style.backgroundColor = bgColor;\r\n//         }\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <header className=\"jumbotron\">\r\n//                 <h1>Simple React Todo App <span id=\"inH1\"></span></h1>\r\n//                 <p>Please add to-do item(s) through the input field</p>\r\n//             </header>\r\n//         )\r\n//     }\r\n// }","import React, {useState} from \"react\"\r\n\r\ninterface Props{\r\n    addTodo: (title:string)=>void\r\n}\r\n\r\n// export default class InputTodo extends Component<Props>{\r\n//     state={\r\n//         title:\"\"\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <div className=\"input-group\">\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         name=\"title\" \r\n//                         className=\"form-control\"\r\n//                         placeholder=\"Add Todo...\" \r\n//                         value={this.state.title} \r\n//                         onChange={this.onChange} \r\n//                     />\r\n\r\n//                     <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n//                 </div>\r\n//             </form>\r\n//         )\r\n//     }\r\n\r\n//     onChange = (e:any) => {\r\n//         this.setState({\r\n//             [e.target.name]: e.target.value\r\n//         })\r\n//         console.log('ello')\r\n//     }\r\n\r\n//     handleSubmit = (e:any) => {\r\n//         e.preventDefault()\r\n//         this.props.addTodo(this.state.title)\r\n//         this.setState({\r\n//             title:\"\"\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const InputTodo = (props:Props) => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\"\r\n    })\r\n\r\n    const onChange = (e:any) =>{\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e:any)=>{\r\n        e.preventDefault()\r\n        props.addTodo(inputText.title)\r\n        setInputText({\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Add Todo...\" \r\n                    value={inputText.title} \r\n                    onChange={onChange} \r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport TodoList from \"./TodoList\"\r\nimport {Header} from \"./Header\"\r\nimport {InputTodo} from \"./InputTodo\"\r\nimport axios from \"axios\"\r\n\r\ninterface Todo {\r\n    userId: number,\r\n    id: string,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\nexport const TodoContainer = () => {\r\n    const [todos, setTodos] = useState(Array<Todo>())\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleChange = (id:string) => {\r\n        setTodos(\r\n        todos.map((todo:Todo) => {\r\n            if(todo.id === id){\r\n            todo.completed = !todo.completed\r\n            }\r\n            return todo\r\n        })\r\n        )\r\n        setShow(!show)\r\n    }\r\n\r\n    const delTodo = (id:string) => {\r\n        setTodos([\r\n            ...todos.filter((todo:Todo) =>{\r\n                return todo.id !== id\r\n            })\r\n        ])\r\n    }\r\n\r\n    const addTodo = (title:string) =>{\r\n        const newTodo = {\r\n            userId: 98,\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    //React Hooks\r\n\r\n    useEffect(() =>{\r\n        console.log('test run')\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n            .then(res => setTodos(res.data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header headerSpan={show} />\r\n            <InputTodo addTodo={addTodo} />\r\n            <TodoList\r\n                todos={todos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodo={delTodo}\r\n            />\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\n// export default class TodoContainer extends React.Component{\r\n\r\n//     state = {\r\n// \t\ttodos: Array<Todo>(),\r\n// \t\tshow: false\r\n//     };\r\n\r\n//     componentDidMount(){\r\n//       axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({todos: res.data}))\r\n//     }\r\n\r\n//     render(){\r\n//         return (<div className=\"container\" style={{ \r\n//           // maxWidth: \"600px\"\r\n//         }}>\r\n//             <Header headerSpan={this.state.show}/>\r\n//             <InputTodo addTodo={this.addTodo} />\r\n//             <TodoList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodo={this.delTodo}/>\r\n//           </div>)\r\n//     }\r\n\r\n//     handleChange = (id:string) => {\r\n//         this.setState({\r\n//             todos: this.state.todos.map(todo => {\r\n//               if (todo.id === id) {\r\n//                 todo.completed = !todo.completed;\r\n//               }\r\n//               return todo;\r\n// \t\t\t}),\r\n// \t\t\tshow: !this.state.show\r\n//         });\r\n//         console.log('clicked ', id)\r\n//     }\r\n\r\n//     delTodo = (id:string) => {\r\n// \t\taxios\r\n// \t\t\t.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n// \t\t\t.then(res =>\r\n// \t\t\t\tthis.setState({\r\n// \t\t\t\t\ttodos: [\r\n// \t\t\t\t\t\t...this.state.todos.filter(todo =>{\r\n// \t\t\t\t\t\t\treturn todo.id !== id\r\n// \t\t\t\t\t\t})\r\n// \t\t\t\t\t]\r\n// \t\t\t\t})\r\n// \t\t\t)\r\n\r\n//         // this.setState({\r\n//         //     todos: [\r\n//         //       ...this.state.todos.filter(todo => {\r\n//         //         return todo.id !== id;\r\n//         //       })\r\n//         //     ]\r\n//         //   });\r\n\r\n//         console.log('deleted ', id);\r\n//     }\r\n\r\n//     addTodo = (title:string)=>{\r\n//         axios\r\n//         \t.post('https://jsonplaceholder.typicode.com/todos',{\r\n// \t\t\t\ttitle: title,\r\n// \t\t\t\tcompleted: false\r\n// \t\t\t})\r\n// \t\t\t.then(res => \r\n// \t\t\t\tthis.setState({\r\n// \t\t\t\t\ttodos: [...this.state.todos, res.data]\r\n// \t\t\t\t})\r\n// \t\t\t)\r\n\r\n//         // const newTodo = {\r\n//         //     id: uuidv4(),\r\n//         //     title: title,\r\n//         //     completed: false\r\n//         // };\r\n//         // this.setState({\r\n//         //     todos: [...this.state.todos, newTodo]\r\n//         // });\r\n\r\n//         console.log('added: ', title)\r\n//     }\r\n// }","import React from 'react'\r\n\r\ninterface Props{\r\n    page:string\r\n    isActive:boolean\r\n    goTo:(page:string)=>void\r\n}\r\n\r\nexport const NavLink = (props:Props)=>{\r\n    return(\r\n        <li\r\n            key={props.page}\r\n            className={props.isActive ? \"nav-item active\":\"nav-item\"}>\r\n            <button \r\n                className=\"nav-link btn\" \r\n                onClick={()=>props.goTo(props.page)}\r\n                style={{ outline: 'none'}}\r\n            >{props.page}</button>\r\n        </li> \r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from './NavLink'\r\n\r\ninterface Props {\r\n    pages: string[]\r\n    active: string\r\n    goTo: (page:string)=>void\r\n}\r\n\r\nexport default function NavContainer(props:Props){\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    {props.pages.map(page=>(\r\n                        <NavLink\r\n                            page={page}\r\n                            isActive={page === props.active}\r\n                            goTo={props.goTo}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport './App.css'\r\nimport { TodoContainer } from \"./components/TodoContainer\"\r\nimport NavContainer from \"./nav/NavContainer\"\r\n\r\nexport default function App(){\r\n\r\n    const pages=[\r\n        \"Home\",\r\n        \"ToDo\"\r\n    ]\r\n\r\n    const [active, setActive] = useState(\"Home\")\r\n\r\n    const goTo = (page:string)=>{\r\n        console.log('goTo ', page);\r\n        \r\n        if(pages.includes(page))\r\n            console.log('setting active page');\r\n            \r\n            setActive(page)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <NavContainer \r\n                pages={pages}\r\n                active={active}\r\n                goTo={goTo}\r\n            />\r\n            {active===\"ToDo\" ? <TodoContainer/> : null}\r\n            {active===\"Home\" ? <h1>Home</h1>:null}\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\n// import {TodoContainer} from \"./components/TodoContainer\"\r\n// import \"./App.css\"\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\") )"],"sourceRoot":""}