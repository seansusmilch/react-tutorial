{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","components/Header.tsx","components/InputTodo.tsx","components/TodoContainer.tsx","index.tsx"],"names":["completedStyle","fontStyle","color","opacity","textDecoration","TodoItem","props","className","type","checked","todo","completed","onChange","handleChangeProps","id","style","title","onClick","deleteTodo","TodoList","todos","map","key","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","this","document","getElementById","innerHTML","backgroundColor","React","Component","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodo","name","placeholder","value","target","TodoContainer","state","Array","show","handleChange","setState","console","log","delTodo","axios","delete","then","res","filter","post","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.99431ac2.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\ninterface Props{\r\n    todo:{\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    },\r\n    handleChangeProps: (id:string)=>void\r\n    deleteTodo: (id: string)=>void\r\n}\r\n\r\nconst completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"grey\",\r\n    opacity: 1,\r\n    textDecoration: \"line-through\",\r\n}\r\n\r\nexport default function TodoItem(props:Props){\r\n    return(\r\n        <li className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                    <input type=\"checkbox\"  checked={props.todo.completed} onChange={()=> props.handleChangeProps(props.todo.id)}/>\r\n                </div>\r\n            </div>\r\n            <span className=\"input-group-text bg-transparent border-0\" style={props.todo.completed ? completedStyle : {}} >{props.todo.title}</span>\r\n            <button onClick={()=> props.deleteTodo(props.todo.id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n        </li>    \r\n    )\r\n}","import React from \"react\"\r\n\r\nimport TodoItem from \"./TodoItem\"\r\n\r\ninterface Props {\r\n    todos: {\r\n        id: string,\r\n        title: string,\r\n        completed: boolean\r\n    }[],\r\n    handleChangeProps: (id:string)=>void,\r\n    deleteTodo: (id:string)=>void\r\n}\r\n\r\nexport default function TodoList(props: Props){\r\n    return (\r\n        <div>\r\n                {props.todos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.id} \r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodo={props.deleteTodo}\r\n\r\n                />\r\n                ))}\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\n// export const Header : React.FC = () => {\r\n//     return (\r\n//         <header className=\"jumbotron\">\r\n//             <h1>Simple React Todo App\r\n//                 <span id=\"inH1\"></span>\r\n//             </h1>\r\n//             <p>Please add to-do item(s) through the input field</p>\r\n//         </header>\r\n//     )\r\n// }\r\n\r\ninterface Props {\r\n    headerSpan: boolean\r\n}\r\n\r\nexport default class Header extends React.Component<Props>{\r\n    componentDidUpdate(prevProps:any, prevState:any){\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n            document!.getElementById(\"inH1\")!.innerHTML = \"clicked\"\r\n            document!.getElementById(\"inH1\")!.style.backgroundColor = bgColor;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <header className=\"jumbotron\">\r\n                <h1>Simple React Todo App <span id=\"inH1\"></span></h1>\r\n                <p>Please add to-do item(s) through the input field</p>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, {useState} from \"react\"\r\n\r\ninterface Props{\r\n    addTodo: (title:string)=>void\r\n}\r\n\r\n// export default class InputTodo extends Component<Props>{\r\n//     state={\r\n//         title:\"\"\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <div className=\"input-group\">\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         name=\"title\" \r\n//                         className=\"form-control\"\r\n//                         placeholder=\"Add Todo...\" \r\n//                         value={this.state.title} \r\n//                         onChange={this.onChange} \r\n//                     />\r\n\r\n//                     <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n//                 </div>\r\n//             </form>\r\n//         )\r\n//     }\r\n\r\n//     onChange = (e:any) => {\r\n//         this.setState({\r\n//             [e.target.name]: e.target.value\r\n//         })\r\n//         console.log('ello')\r\n//     }\r\n\r\n//     handleSubmit = (e:any) => {\r\n//         e.preventDefault()\r\n//         this.props.addTodo(this.state.title)\r\n//         this.setState({\r\n//             title:\"\"\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const InputTodo = (props:Props) => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\"\r\n    })\r\n\r\n    const onChange = (e:any) =>{\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e:any)=>{\r\n        e.preventDefault()\r\n        props.addTodo(inputText.title)\r\n        setInputText({\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Add Todo...\" \r\n                    value={inputText.title} \r\n                    onChange={onChange} \r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary input-group-append\" value=\"Add\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from \"react\"\r\n// import { v4 as uuidv4 } from \"uuid\"\r\nimport TodoList from \"./TodoList\"\r\nimport Header from \"./Header\"\r\nimport {InputTodo} from \"./InputTodo\"\r\nimport axios from \"axios\"\r\n\r\ninterface Todo {\r\n  userId: number,\r\n  id: string,\r\n  title: string,\r\n  completed: boolean\r\n}\r\n\r\nexport default class TodoContainer extends React.Component{\r\n\r\n    state = {\r\n\t\ttodos: Array<Todo>(),\r\n\t\tshow: false\r\n    };\r\n\r\n    componentDidMount(){\r\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({todos: res.data}))\r\n    }\r\n\r\n    render(){\r\n        return (<div className=\"container\" style={{ \r\n          // maxWidth: \"600px\"\r\n        }}>\r\n            <Header headerSpan={this.state.show}/>\r\n            <InputTodo addTodo={this.addTodo} />\r\n            <TodoList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodo={this.delTodo}/>\r\n          </div>)\r\n    }\r\n\r\n    handleChange = (id:string) => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n              if (todo.id === id) {\r\n                todo.completed = !todo.completed;\r\n              }\r\n              return todo;\r\n\t\t\t}),\r\n\t\t\tshow: !this.state.show\r\n        });\r\n        console.log('clicked ', id)\r\n    }\r\n\r\n    delTodo = (id:string) => {\r\n\t\taxios\r\n\t\t\t.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n\t\t\t.then(res =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttodos: [\r\n\t\t\t\t\t\t...this.state.todos.filter(todo =>{\r\n\t\t\t\t\t\t\treturn todo.id !== id\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t)\r\n\r\n        // this.setState({\r\n        //     todos: [\r\n        //       ...this.state.todos.filter(todo => {\r\n        //         return todo.id !== id;\r\n        //       })\r\n        //     ]\r\n        //   });\r\n\r\n        console.log('deleted ', id);\r\n    }\r\n\r\n    addTodo = (title:string)=>{\r\n        axios\r\n        \t.post('https://jsonplaceholder.typicode.com/todos',{\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tcompleted: false\r\n\t\t\t})\r\n\t\t\t.then(res => \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttodos: [...this.state.todos, res.data]\r\n\t\t\t\t})\r\n\t\t\t)\r\n\r\n        // const newTodo = {\r\n        //     id: uuidv4(),\r\n        //     title: title,\r\n        //     completed: false\r\n        // };\r\n        // this.setState({\r\n        //     todos: [...this.state.todos, newTodo]\r\n        // });\r\n\r\n        console.log('added: ', title)\r\n    }\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer/>, document.getElementById(\"root\") )"],"sourceRoot":""}